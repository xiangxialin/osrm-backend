// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mld.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mld.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pbmld {
class LevelDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LevelData>
     _instance;
} _LevelData_default_instance_;
class PartitionsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Partitions>
     _instance;
} _Partitions_default_instance_;
class CellDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CellData>
     _instance;
} _CellData_default_instance_;
class CellsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Cells>
     _instance;
} _Cells_default_instance_;
class MetricDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Metric>
     _instance;
} _Metric_default_instance_;
class MetricsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Metrics>
     _instance;
} _Metrics_default_instance_;
class EdgeDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EdgeData>
     _instance;
} _EdgeData_default_instance_;
class QueryGraphDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QueryGraph>
     _instance;
} _QueryGraph_default_instance_;

namespace protobuf_mld_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelData, number_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelData, lidx_to_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelData, lidx_to_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelData, bit_to_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Partitions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Partitions, level_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Partitions, partition_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CellData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CellData, value_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CellData, source_boundary_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CellData, destination_boundary_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CellData, source_node_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CellData, destination_node_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cells, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cells, source_boundary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cells, destination_boundary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cells, cells_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cells, level_offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metric, weights_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metrics, metrics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeData, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeData, turn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeData, is_forward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeData, is_backward_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryGraph, nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryGraph, edges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryGraph, node_level_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryGraph, node_weights_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(LevelData)},
  { 9, -1, sizeof(Partitions)},
  { 16, -1, sizeof(CellData)},
  { 26, -1, sizeof(Cells)},
  { 35, -1, sizeof(Metric)},
  { 41, -1, sizeof(Metrics)},
  { 47, -1, sizeof(EdgeData)},
  { 56, -1, sizeof(QueryGraph)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LevelData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Partitions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CellData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Cells_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Metric_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Metrics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EdgeData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryGraph_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mld.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _LevelData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LevelData_default_instance_);_Partitions_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Partitions_default_instance_);_CellData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CellData_default_instance_);_Cells_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Cells_default_instance_);_Metric_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Metric_default_instance_);_Metrics_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Metrics_default_instance_);_EdgeData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EdgeData_default_instance_);_QueryGraph_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QueryGraph_default_instance_);_Partitions_default_instance_._instance.get_mutable()->level_data_ = const_cast< ::pbmld::LevelData*>(
      ::pbmld::LevelData::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tmld.proto\022\005pbmld\"e\n\tLevelData\022\024\n\014numbe"
      "r_level\030\001 \001(\r\022\026\n\016lidx_to_offset\030\002 \003(\r\022\024\n"
      "\014lidx_to_mask\030\003 \003(\004\022\024\n\014bit_to_level\030\004 \003("
      "\r\"E\n\nPartitions\022$\n\nlevel_data\030\001 \001(\0132\020.pb"
      "mld.LevelData\022\021\n\tpartition\030\002 \003(\004\"\242\001\n\010Cel"
      "lData\022\024\n\014value_offset\030\001 \001(\r\022\036\n\026source_bo"
      "undary_offset\030\002 \001(\r\022#\n\033destination_bound"
      "ary_offset\030\003 \001(\r\022\032\n\022source_node_number\030\004"
      " \001(\r\022\037\n\027destination_node_number\030\005 \001(\r\"t\n"
      "\005Cells\022\027\n\017source_boundary\030\001 \003(\r\022\034\n\024desti"
      "nation_boundary\030\002 \003(\r\022\036\n\005cells\030\003 \003(\0132\017.p"
      "bmld.CellData\022\024\n\014level_offset\030\004 \003(\004\"\031\n\006M"
      "etric\022\017\n\007weights\030\001 \003(\005\")\n\007Metrics\022\036\n\007met"
      "rics\030\001 \003(\0132\r.pbmld.Metric\"T\n\010EdgeData\022\016\n"
      "\006target\030\001 \001(\r\022\017\n\007turn_id\030\002 \001(\r\022\022\n\nis_for"
      "ward\030\003 \001(\010\022\023\n\013is_backward\030\004 \001(\010\"l\n\nQuery"
      "Graph\022\r\n\005nodes\030\001 \003(\r\022\036\n\005edges\030\002 \003(\0132\017.pb"
      "mld.EdgeData\022\031\n\021node_level_offset\030\003 \003(\r\022"
      "\024\n\014node_weights\030\004 \003(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 749);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mld.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_mld_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelData::kNumberLevelFieldNumber;
const int LevelData::kLidxToOffsetFieldNumber;
const int LevelData::kLidxToMaskFieldNumber;
const int LevelData::kBitToLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelData::LevelData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mld_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.LevelData)
}
LevelData::LevelData(const LevelData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      lidx_to_offset_(from.lidx_to_offset_),
      lidx_to_mask_(from.lidx_to_mask_),
      bit_to_level_(from.bit_to_level_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  number_level_ = from.number_level_;
  // @@protoc_insertion_point(copy_constructor:pbmld.LevelData)
}

void LevelData::SharedCtor() {
  number_level_ = 0u;
  _cached_size_ = 0;
}

LevelData::~LevelData() {
  // @@protoc_insertion_point(destructor:pbmld.LevelData)
  SharedDtor();
}

void LevelData::SharedDtor() {
}

void LevelData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LevelData::descriptor() {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelData& LevelData::default_instance() {
  protobuf_mld_2eproto::InitDefaults();
  return *internal_default_instance();
}

LevelData* LevelData::New(::google::protobuf::Arena* arena) const {
  LevelData* n = new LevelData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LevelData::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.LevelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lidx_to_offset_.Clear();
  lidx_to_mask_.Clear();
  bit_to_level_.Clear();
  number_level_ = 0u;
  _internal_metadata_.Clear();
}

bool LevelData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.LevelData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 number_level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 lidx_to_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lidx_to_offset())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_lidx_to_offset())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 lidx_to_mask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_lidx_to_mask())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_lidx_to_mask())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 bit_to_level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_bit_to_level())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_bit_to_level())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.LevelData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.LevelData)
  return false;
#undef DO_
}

void LevelData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.LevelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 number_level = 1;
  if (this->number_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->number_level(), output);
  }

  // repeated uint32 lidx_to_offset = 2;
  if (this->lidx_to_offset_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _lidx_to_offset_cached_byte_size_));
  }
  for (int i = 0, n = this->lidx_to_offset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->lidx_to_offset(i), output);
  }

  // repeated uint64 lidx_to_mask = 3;
  if (this->lidx_to_mask_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _lidx_to_mask_cached_byte_size_));
  }
  for (int i = 0, n = this->lidx_to_mask_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->lidx_to_mask(i), output);
  }

  // repeated uint32 bit_to_level = 4;
  if (this->bit_to_level_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bit_to_level_cached_byte_size_));
  }
  for (int i = 0, n = this->bit_to_level_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->bit_to_level(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.LevelData)
}

::google::protobuf::uint8* LevelData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.LevelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 number_level = 1;
  if (this->number_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->number_level(), target);
  }

  // repeated uint32 lidx_to_offset = 2;
  if (this->lidx_to_offset_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _lidx_to_offset_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->lidx_to_offset_, target);
  }

  // repeated uint64 lidx_to_mask = 3;
  if (this->lidx_to_mask_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _lidx_to_mask_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->lidx_to_mask_, target);
  }

  // repeated uint32 bit_to_level = 4;
  if (this->bit_to_level_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _bit_to_level_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->bit_to_level_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.LevelData)
  return target;
}

size_t LevelData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.LevelData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 lidx_to_offset = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->lidx_to_offset_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lidx_to_offset_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 lidx_to_mask = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->lidx_to_mask_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lidx_to_mask_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 bit_to_level = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->bit_to_level_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bit_to_level_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 number_level = 1;
  if (this->number_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LevelData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.LevelData)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.LevelData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.LevelData)
    MergeFrom(*source);
  }
}

void LevelData::MergeFrom(const LevelData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.LevelData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lidx_to_offset_.MergeFrom(from.lidx_to_offset_);
  lidx_to_mask_.MergeFrom(from.lidx_to_mask_);
  bit_to_level_.MergeFrom(from.bit_to_level_);
  if (from.number_level() != 0) {
    set_number_level(from.number_level());
  }
}

void LevelData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.LevelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelData::CopyFrom(const LevelData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.LevelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelData::IsInitialized() const {
  return true;
}

void LevelData::Swap(LevelData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelData::InternalSwap(LevelData* other) {
  using std::swap;
  lidx_to_offset_.InternalSwap(&other->lidx_to_offset_);
  lidx_to_mask_.InternalSwap(&other->lidx_to_mask_);
  bit_to_level_.InternalSwap(&other->bit_to_level_);
  swap(number_level_, other->number_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LevelData::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LevelData

// uint32 number_level = 1;
void LevelData::clear_number_level() {
  number_level_ = 0u;
}
::google::protobuf::uint32 LevelData::number_level() const {
  // @@protoc_insertion_point(field_get:pbmld.LevelData.number_level)
  return number_level_;
}
void LevelData::set_number_level(::google::protobuf::uint32 value) {
  
  number_level_ = value;
  // @@protoc_insertion_point(field_set:pbmld.LevelData.number_level)
}

// repeated uint32 lidx_to_offset = 2;
int LevelData::lidx_to_offset_size() const {
  return lidx_to_offset_.size();
}
void LevelData::clear_lidx_to_offset() {
  lidx_to_offset_.Clear();
}
::google::protobuf::uint32 LevelData::lidx_to_offset(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.LevelData.lidx_to_offset)
  return lidx_to_offset_.Get(index);
}
void LevelData::set_lidx_to_offset(int index, ::google::protobuf::uint32 value) {
  lidx_to_offset_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmld.LevelData.lidx_to_offset)
}
void LevelData::add_lidx_to_offset(::google::protobuf::uint32 value) {
  lidx_to_offset_.Add(value);
  // @@protoc_insertion_point(field_add:pbmld.LevelData.lidx_to_offset)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LevelData::lidx_to_offset() const {
  // @@protoc_insertion_point(field_list:pbmld.LevelData.lidx_to_offset)
  return lidx_to_offset_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LevelData::mutable_lidx_to_offset() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.LevelData.lidx_to_offset)
  return &lidx_to_offset_;
}

// repeated uint64 lidx_to_mask = 3;
int LevelData::lidx_to_mask_size() const {
  return lidx_to_mask_.size();
}
void LevelData::clear_lidx_to_mask() {
  lidx_to_mask_.Clear();
}
::google::protobuf::uint64 LevelData::lidx_to_mask(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.LevelData.lidx_to_mask)
  return lidx_to_mask_.Get(index);
}
void LevelData::set_lidx_to_mask(int index, ::google::protobuf::uint64 value) {
  lidx_to_mask_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmld.LevelData.lidx_to_mask)
}
void LevelData::add_lidx_to_mask(::google::protobuf::uint64 value) {
  lidx_to_mask_.Add(value);
  // @@protoc_insertion_point(field_add:pbmld.LevelData.lidx_to_mask)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LevelData::lidx_to_mask() const {
  // @@protoc_insertion_point(field_list:pbmld.LevelData.lidx_to_mask)
  return lidx_to_mask_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LevelData::mutable_lidx_to_mask() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.LevelData.lidx_to_mask)
  return &lidx_to_mask_;
}

// repeated uint32 bit_to_level = 4;
int LevelData::bit_to_level_size() const {
  return bit_to_level_.size();
}
void LevelData::clear_bit_to_level() {
  bit_to_level_.Clear();
}
::google::protobuf::uint32 LevelData::bit_to_level(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.LevelData.bit_to_level)
  return bit_to_level_.Get(index);
}
void LevelData::set_bit_to_level(int index, ::google::protobuf::uint32 value) {
  bit_to_level_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmld.LevelData.bit_to_level)
}
void LevelData::add_bit_to_level(::google::protobuf::uint32 value) {
  bit_to_level_.Add(value);
  // @@protoc_insertion_point(field_add:pbmld.LevelData.bit_to_level)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LevelData::bit_to_level() const {
  // @@protoc_insertion_point(field_list:pbmld.LevelData.bit_to_level)
  return bit_to_level_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LevelData::mutable_bit_to_level() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.LevelData.bit_to_level)
  return &bit_to_level_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Partitions::kLevelDataFieldNumber;
const int Partitions::kPartitionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Partitions::Partitions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mld_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.Partitions)
}
Partitions::Partitions(const Partitions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      partition_(from.partition_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_level_data()) {
    level_data_ = new ::pbmld::LevelData(*from.level_data_);
  } else {
    level_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pbmld.Partitions)
}

void Partitions::SharedCtor() {
  level_data_ = NULL;
  _cached_size_ = 0;
}

Partitions::~Partitions() {
  // @@protoc_insertion_point(destructor:pbmld.Partitions)
  SharedDtor();
}

void Partitions::SharedDtor() {
  if (this != internal_default_instance()) delete level_data_;
}

void Partitions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Partitions::descriptor() {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Partitions& Partitions::default_instance() {
  protobuf_mld_2eproto::InitDefaults();
  return *internal_default_instance();
}

Partitions* Partitions::New(::google::protobuf::Arena* arena) const {
  Partitions* n = new Partitions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Partitions::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.Partitions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  partition_.Clear();
  if (GetArenaNoVirtual() == NULL && level_data_ != NULL) {
    delete level_data_;
  }
  level_data_ = NULL;
  _internal_metadata_.Clear();
}

bool Partitions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.Partitions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pbmld.LevelData level_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_level_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 partition = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_partition())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_partition())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.Partitions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.Partitions)
  return false;
#undef DO_
}

void Partitions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.Partitions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbmld.LevelData level_data = 1;
  if (this->has_level_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->level_data_, output);
  }

  // repeated uint64 partition = 2;
  if (this->partition_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _partition_cached_byte_size_));
  }
  for (int i = 0, n = this->partition_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->partition(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.Partitions)
}

::google::protobuf::uint8* Partitions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.Partitions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbmld.LevelData level_data = 1;
  if (this->has_level_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->level_data_, deterministic, target);
  }

  // repeated uint64 partition = 2;
  if (this->partition_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _partition_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->partition_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.Partitions)
  return target;
}

size_t Partitions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.Partitions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 partition = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->partition_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _partition_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .pbmld.LevelData level_data = 1;
  if (this->has_level_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->level_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Partitions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.Partitions)
  GOOGLE_DCHECK_NE(&from, this);
  const Partitions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Partitions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.Partitions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.Partitions)
    MergeFrom(*source);
  }
}

void Partitions::MergeFrom(const Partitions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.Partitions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  partition_.MergeFrom(from.partition_);
  if (from.has_level_data()) {
    mutable_level_data()->::pbmld::LevelData::MergeFrom(from.level_data());
  }
}

void Partitions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.Partitions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Partitions::CopyFrom(const Partitions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.Partitions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Partitions::IsInitialized() const {
  return true;
}

void Partitions::Swap(Partitions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Partitions::InternalSwap(Partitions* other) {
  using std::swap;
  partition_.InternalSwap(&other->partition_);
  swap(level_data_, other->level_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Partitions::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Partitions

// .pbmld.LevelData level_data = 1;
bool Partitions::has_level_data() const {
  return this != internal_default_instance() && level_data_ != NULL;
}
void Partitions::clear_level_data() {
  if (GetArenaNoVirtual() == NULL && level_data_ != NULL) delete level_data_;
  level_data_ = NULL;
}
const ::pbmld::LevelData& Partitions::level_data() const {
  const ::pbmld::LevelData* p = level_data_;
  // @@protoc_insertion_point(field_get:pbmld.Partitions.level_data)
  return p != NULL ? *p : *reinterpret_cast<const ::pbmld::LevelData*>(
      &::pbmld::_LevelData_default_instance_);
}
::pbmld::LevelData* Partitions::mutable_level_data() {
  
  if (level_data_ == NULL) {
    level_data_ = new ::pbmld::LevelData;
  }
  // @@protoc_insertion_point(field_mutable:pbmld.Partitions.level_data)
  return level_data_;
}
::pbmld::LevelData* Partitions::release_level_data() {
  // @@protoc_insertion_point(field_release:pbmld.Partitions.level_data)
  
  ::pbmld::LevelData* temp = level_data_;
  level_data_ = NULL;
  return temp;
}
void Partitions::set_allocated_level_data(::pbmld::LevelData* level_data) {
  delete level_data_;
  level_data_ = level_data;
  if (level_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pbmld.Partitions.level_data)
}

// repeated uint64 partition = 2;
int Partitions::partition_size() const {
  return partition_.size();
}
void Partitions::clear_partition() {
  partition_.Clear();
}
::google::protobuf::uint64 Partitions::partition(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.Partitions.partition)
  return partition_.Get(index);
}
void Partitions::set_partition(int index, ::google::protobuf::uint64 value) {
  partition_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmld.Partitions.partition)
}
void Partitions::add_partition(::google::protobuf::uint64 value) {
  partition_.Add(value);
  // @@protoc_insertion_point(field_add:pbmld.Partitions.partition)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Partitions::partition() const {
  // @@protoc_insertion_point(field_list:pbmld.Partitions.partition)
  return partition_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Partitions::mutable_partition() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.Partitions.partition)
  return &partition_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CellData::kValueOffsetFieldNumber;
const int CellData::kSourceBoundaryOffsetFieldNumber;
const int CellData::kDestinationBoundaryOffsetFieldNumber;
const int CellData::kSourceNodeNumberFieldNumber;
const int CellData::kDestinationNodeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CellData::CellData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mld_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.CellData)
}
CellData::CellData(const CellData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_offset_, &from.value_offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&destination_node_number_) -
    reinterpret_cast<char*>(&value_offset_)) + sizeof(destination_node_number_));
  // @@protoc_insertion_point(copy_constructor:pbmld.CellData)
}

void CellData::SharedCtor() {
  ::memset(&value_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destination_node_number_) -
      reinterpret_cast<char*>(&value_offset_)) + sizeof(destination_node_number_));
  _cached_size_ = 0;
}

CellData::~CellData() {
  // @@protoc_insertion_point(destructor:pbmld.CellData)
  SharedDtor();
}

void CellData::SharedDtor() {
}

void CellData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CellData::descriptor() {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CellData& CellData::default_instance() {
  protobuf_mld_2eproto::InitDefaults();
  return *internal_default_instance();
}

CellData* CellData::New(::google::protobuf::Arena* arena) const {
  CellData* n = new CellData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CellData::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.CellData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destination_node_number_) -
      reinterpret_cast<char*>(&value_offset_)) + sizeof(destination_node_number_));
  _internal_metadata_.Clear();
}

bool CellData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.CellData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 value_offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 source_boundary_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_boundary_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 destination_boundary_offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destination_boundary_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 source_node_number = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_node_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 destination_node_number = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destination_node_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.CellData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.CellData)
  return false;
#undef DO_
}

void CellData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.CellData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value_offset = 1;
  if (this->value_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value_offset(), output);
  }

  // uint32 source_boundary_offset = 2;
  if (this->source_boundary_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->source_boundary_offset(), output);
  }

  // uint32 destination_boundary_offset = 3;
  if (this->destination_boundary_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->destination_boundary_offset(), output);
  }

  // uint32 source_node_number = 4;
  if (this->source_node_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->source_node_number(), output);
  }

  // uint32 destination_node_number = 5;
  if (this->destination_node_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->destination_node_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.CellData)
}

::google::protobuf::uint8* CellData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.CellData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value_offset = 1;
  if (this->value_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value_offset(), target);
  }

  // uint32 source_boundary_offset = 2;
  if (this->source_boundary_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->source_boundary_offset(), target);
  }

  // uint32 destination_boundary_offset = 3;
  if (this->destination_boundary_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->destination_boundary_offset(), target);
  }

  // uint32 source_node_number = 4;
  if (this->source_node_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->source_node_number(), target);
  }

  // uint32 destination_node_number = 5;
  if (this->destination_node_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->destination_node_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.CellData)
  return target;
}

size_t CellData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.CellData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 value_offset = 1;
  if (this->value_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value_offset());
  }

  // uint32 source_boundary_offset = 2;
  if (this->source_boundary_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source_boundary_offset());
  }

  // uint32 destination_boundary_offset = 3;
  if (this->destination_boundary_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destination_boundary_offset());
  }

  // uint32 source_node_number = 4;
  if (this->source_node_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source_node_number());
  }

  // uint32 destination_node_number = 5;
  if (this->destination_node_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destination_node_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CellData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.CellData)
  GOOGLE_DCHECK_NE(&from, this);
  const CellData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CellData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.CellData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.CellData)
    MergeFrom(*source);
  }
}

void CellData::MergeFrom(const CellData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.CellData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value_offset() != 0) {
    set_value_offset(from.value_offset());
  }
  if (from.source_boundary_offset() != 0) {
    set_source_boundary_offset(from.source_boundary_offset());
  }
  if (from.destination_boundary_offset() != 0) {
    set_destination_boundary_offset(from.destination_boundary_offset());
  }
  if (from.source_node_number() != 0) {
    set_source_node_number(from.source_node_number());
  }
  if (from.destination_node_number() != 0) {
    set_destination_node_number(from.destination_node_number());
  }
}

void CellData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.CellData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CellData::CopyFrom(const CellData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.CellData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CellData::IsInitialized() const {
  return true;
}

void CellData::Swap(CellData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CellData::InternalSwap(CellData* other) {
  using std::swap;
  swap(value_offset_, other->value_offset_);
  swap(source_boundary_offset_, other->source_boundary_offset_);
  swap(destination_boundary_offset_, other->destination_boundary_offset_);
  swap(source_node_number_, other->source_node_number_);
  swap(destination_node_number_, other->destination_node_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CellData::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CellData

// uint32 value_offset = 1;
void CellData::clear_value_offset() {
  value_offset_ = 0u;
}
::google::protobuf::uint32 CellData::value_offset() const {
  // @@protoc_insertion_point(field_get:pbmld.CellData.value_offset)
  return value_offset_;
}
void CellData::set_value_offset(::google::protobuf::uint32 value) {
  
  value_offset_ = value;
  // @@protoc_insertion_point(field_set:pbmld.CellData.value_offset)
}

// uint32 source_boundary_offset = 2;
void CellData::clear_source_boundary_offset() {
  source_boundary_offset_ = 0u;
}
::google::protobuf::uint32 CellData::source_boundary_offset() const {
  // @@protoc_insertion_point(field_get:pbmld.CellData.source_boundary_offset)
  return source_boundary_offset_;
}
void CellData::set_source_boundary_offset(::google::protobuf::uint32 value) {
  
  source_boundary_offset_ = value;
  // @@protoc_insertion_point(field_set:pbmld.CellData.source_boundary_offset)
}

// uint32 destination_boundary_offset = 3;
void CellData::clear_destination_boundary_offset() {
  destination_boundary_offset_ = 0u;
}
::google::protobuf::uint32 CellData::destination_boundary_offset() const {
  // @@protoc_insertion_point(field_get:pbmld.CellData.destination_boundary_offset)
  return destination_boundary_offset_;
}
void CellData::set_destination_boundary_offset(::google::protobuf::uint32 value) {
  
  destination_boundary_offset_ = value;
  // @@protoc_insertion_point(field_set:pbmld.CellData.destination_boundary_offset)
}

// uint32 source_node_number = 4;
void CellData::clear_source_node_number() {
  source_node_number_ = 0u;
}
::google::protobuf::uint32 CellData::source_node_number() const {
  // @@protoc_insertion_point(field_get:pbmld.CellData.source_node_number)
  return source_node_number_;
}
void CellData::set_source_node_number(::google::protobuf::uint32 value) {
  
  source_node_number_ = value;
  // @@protoc_insertion_point(field_set:pbmld.CellData.source_node_number)
}

// uint32 destination_node_number = 5;
void CellData::clear_destination_node_number() {
  destination_node_number_ = 0u;
}
::google::protobuf::uint32 CellData::destination_node_number() const {
  // @@protoc_insertion_point(field_get:pbmld.CellData.destination_node_number)
  return destination_node_number_;
}
void CellData::set_destination_node_number(::google::protobuf::uint32 value) {
  
  destination_node_number_ = value;
  // @@protoc_insertion_point(field_set:pbmld.CellData.destination_node_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cells::kSourceBoundaryFieldNumber;
const int Cells::kDestinationBoundaryFieldNumber;
const int Cells::kCellsFieldNumber;
const int Cells::kLevelOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cells::Cells()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mld_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.Cells)
}
Cells::Cells(const Cells& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      source_boundary_(from.source_boundary_),
      destination_boundary_(from.destination_boundary_),
      cells_(from.cells_),
      level_offset_(from.level_offset_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbmld.Cells)
}

void Cells::SharedCtor() {
  _cached_size_ = 0;
}

Cells::~Cells() {
  // @@protoc_insertion_point(destructor:pbmld.Cells)
  SharedDtor();
}

void Cells::SharedDtor() {
}

void Cells::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cells::descriptor() {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Cells& Cells::default_instance() {
  protobuf_mld_2eproto::InitDefaults();
  return *internal_default_instance();
}

Cells* Cells::New(::google::protobuf::Arena* arena) const {
  Cells* n = new Cells;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cells::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.Cells)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_boundary_.Clear();
  destination_boundary_.Clear();
  cells_.Clear();
  level_offset_.Clear();
  _internal_metadata_.Clear();
}

bool Cells::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.Cells)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 source_boundary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_source_boundary())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_source_boundary())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 destination_boundary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_destination_boundary())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_destination_boundary())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pbmld.CellData cells = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cells()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 level_offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_level_offset())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_level_offset())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.Cells)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.Cells)
  return false;
#undef DO_
}

void Cells::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.Cells)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 source_boundary = 1;
  if (this->source_boundary_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _source_boundary_cached_byte_size_));
  }
  for (int i = 0, n = this->source_boundary_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->source_boundary(i), output);
  }

  // repeated uint32 destination_boundary = 2;
  if (this->destination_boundary_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _destination_boundary_cached_byte_size_));
  }
  for (int i = 0, n = this->destination_boundary_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->destination_boundary(i), output);
  }

  // repeated .pbmld.CellData cells = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cells(static_cast<int>(i)), output);
  }

  // repeated uint64 level_offset = 4;
  if (this->level_offset_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _level_offset_cached_byte_size_));
  }
  for (int i = 0, n = this->level_offset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->level_offset(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.Cells)
}

::google::protobuf::uint8* Cells::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.Cells)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 source_boundary = 1;
  if (this->source_boundary_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _source_boundary_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->source_boundary_, target);
  }

  // repeated uint32 destination_boundary = 2;
  if (this->destination_boundary_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _destination_boundary_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->destination_boundary_, target);
  }

  // repeated .pbmld.CellData cells = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->cells(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint64 level_offset = 4;
  if (this->level_offset_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _level_offset_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->level_offset_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.Cells)
  return target;
}

size_t Cells::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.Cells)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 source_boundary = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->source_boundary_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _source_boundary_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 destination_boundary = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->destination_boundary_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _destination_boundary_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .pbmld.CellData cells = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->cells_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cells(static_cast<int>(i)));
    }
  }

  // repeated uint64 level_offset = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->level_offset_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _level_offset_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cells::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.Cells)
  GOOGLE_DCHECK_NE(&from, this);
  const Cells* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Cells>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.Cells)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.Cells)
    MergeFrom(*source);
  }
}

void Cells::MergeFrom(const Cells& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.Cells)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  source_boundary_.MergeFrom(from.source_boundary_);
  destination_boundary_.MergeFrom(from.destination_boundary_);
  cells_.MergeFrom(from.cells_);
  level_offset_.MergeFrom(from.level_offset_);
}

void Cells::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.Cells)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cells::CopyFrom(const Cells& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.Cells)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cells::IsInitialized() const {
  return true;
}

void Cells::Swap(Cells* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cells::InternalSwap(Cells* other) {
  using std::swap;
  source_boundary_.InternalSwap(&other->source_boundary_);
  destination_boundary_.InternalSwap(&other->destination_boundary_);
  cells_.InternalSwap(&other->cells_);
  level_offset_.InternalSwap(&other->level_offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Cells::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Cells

// repeated uint32 source_boundary = 1;
int Cells::source_boundary_size() const {
  return source_boundary_.size();
}
void Cells::clear_source_boundary() {
  source_boundary_.Clear();
}
::google::protobuf::uint32 Cells::source_boundary(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.Cells.source_boundary)
  return source_boundary_.Get(index);
}
void Cells::set_source_boundary(int index, ::google::protobuf::uint32 value) {
  source_boundary_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmld.Cells.source_boundary)
}
void Cells::add_source_boundary(::google::protobuf::uint32 value) {
  source_boundary_.Add(value);
  // @@protoc_insertion_point(field_add:pbmld.Cells.source_boundary)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Cells::source_boundary() const {
  // @@protoc_insertion_point(field_list:pbmld.Cells.source_boundary)
  return source_boundary_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Cells::mutable_source_boundary() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.Cells.source_boundary)
  return &source_boundary_;
}

// repeated uint32 destination_boundary = 2;
int Cells::destination_boundary_size() const {
  return destination_boundary_.size();
}
void Cells::clear_destination_boundary() {
  destination_boundary_.Clear();
}
::google::protobuf::uint32 Cells::destination_boundary(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.Cells.destination_boundary)
  return destination_boundary_.Get(index);
}
void Cells::set_destination_boundary(int index, ::google::protobuf::uint32 value) {
  destination_boundary_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmld.Cells.destination_boundary)
}
void Cells::add_destination_boundary(::google::protobuf::uint32 value) {
  destination_boundary_.Add(value);
  // @@protoc_insertion_point(field_add:pbmld.Cells.destination_boundary)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Cells::destination_boundary() const {
  // @@protoc_insertion_point(field_list:pbmld.Cells.destination_boundary)
  return destination_boundary_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Cells::mutable_destination_boundary() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.Cells.destination_boundary)
  return &destination_boundary_;
}

// repeated .pbmld.CellData cells = 3;
int Cells::cells_size() const {
  return cells_.size();
}
void Cells::clear_cells() {
  cells_.Clear();
}
const ::pbmld::CellData& Cells::cells(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.Cells.cells)
  return cells_.Get(index);
}
::pbmld::CellData* Cells::mutable_cells(int index) {
  // @@protoc_insertion_point(field_mutable:pbmld.Cells.cells)
  return cells_.Mutable(index);
}
::pbmld::CellData* Cells::add_cells() {
  // @@protoc_insertion_point(field_add:pbmld.Cells.cells)
  return cells_.Add();
}
::google::protobuf::RepeatedPtrField< ::pbmld::CellData >*
Cells::mutable_cells() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.Cells.cells)
  return &cells_;
}
const ::google::protobuf::RepeatedPtrField< ::pbmld::CellData >&
Cells::cells() const {
  // @@protoc_insertion_point(field_list:pbmld.Cells.cells)
  return cells_;
}

// repeated uint64 level_offset = 4;
int Cells::level_offset_size() const {
  return level_offset_.size();
}
void Cells::clear_level_offset() {
  level_offset_.Clear();
}
::google::protobuf::uint64 Cells::level_offset(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.Cells.level_offset)
  return level_offset_.Get(index);
}
void Cells::set_level_offset(int index, ::google::protobuf::uint64 value) {
  level_offset_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmld.Cells.level_offset)
}
void Cells::add_level_offset(::google::protobuf::uint64 value) {
  level_offset_.Add(value);
  // @@protoc_insertion_point(field_add:pbmld.Cells.level_offset)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Cells::level_offset() const {
  // @@protoc_insertion_point(field_list:pbmld.Cells.level_offset)
  return level_offset_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Cells::mutable_level_offset() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.Cells.level_offset)
  return &level_offset_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metric::kWeightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metric::Metric()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mld_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.Metric)
}
Metric::Metric(const Metric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      weights_(from.weights_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbmld.Metric)
}

void Metric::SharedCtor() {
  _cached_size_ = 0;
}

Metric::~Metric() {
  // @@protoc_insertion_point(destructor:pbmld.Metric)
  SharedDtor();
}

void Metric::SharedDtor() {
}

void Metric::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Metric::descriptor() {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Metric& Metric::default_instance() {
  protobuf_mld_2eproto::InitDefaults();
  return *internal_default_instance();
}

Metric* Metric::New(::google::protobuf::Arena* arena) const {
  Metric* n = new Metric;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weights_.Clear();
  _internal_metadata_.Clear();
}

bool Metric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.Metric)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 weights = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_weights())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_weights())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.Metric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.Metric)
  return false;
#undef DO_
}

void Metric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 weights = 1;
  if (this->weights_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _weights_cached_byte_size_));
  }
  for (int i = 0, n = this->weights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->weights(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.Metric)
}

::google::protobuf::uint8* Metric::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 weights = 1;
  if (this->weights_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _weights_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->weights_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.Metric)
  return target;
}

size_t Metric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.Metric)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 weights = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->weights_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _weights_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Metric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  const Metric* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metric>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.Metric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.Metric)
    MergeFrom(*source);
  }
}

void Metric::MergeFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weights_.MergeFrom(from.weights_);
}

void Metric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metric::CopyFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metric::IsInitialized() const {
  return true;
}

void Metric::Swap(Metric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metric::InternalSwap(Metric* other) {
  using std::swap;
  weights_.InternalSwap(&other->weights_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Metric::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Metric

// repeated int32 weights = 1;
int Metric::weights_size() const {
  return weights_.size();
}
void Metric::clear_weights() {
  weights_.Clear();
}
::google::protobuf::int32 Metric::weights(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.Metric.weights)
  return weights_.Get(index);
}
void Metric::set_weights(int index, ::google::protobuf::int32 value) {
  weights_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmld.Metric.weights)
}
void Metric::add_weights(::google::protobuf::int32 value) {
  weights_.Add(value);
  // @@protoc_insertion_point(field_add:pbmld.Metric.weights)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Metric::weights() const {
  // @@protoc_insertion_point(field_list:pbmld.Metric.weights)
  return weights_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Metric::mutable_weights() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.Metric.weights)
  return &weights_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metrics::kMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metrics::Metrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mld_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.Metrics)
}
Metrics::Metrics(const Metrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      metrics_(from.metrics_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbmld.Metrics)
}

void Metrics::SharedCtor() {
  _cached_size_ = 0;
}

Metrics::~Metrics() {
  // @@protoc_insertion_point(destructor:pbmld.Metrics)
  SharedDtor();
}

void Metrics::SharedDtor() {
}

void Metrics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Metrics::descriptor() {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Metrics& Metrics::default_instance() {
  protobuf_mld_2eproto::InitDefaults();
  return *internal_default_instance();
}

Metrics* Metrics::New(::google::protobuf::Arena* arena) const {
  Metrics* n = new Metrics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Metrics::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  _internal_metadata_.Clear();
}

bool Metrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.Metrics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pbmld.Metric metrics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.Metrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.Metrics)
  return false;
#undef DO_
}

void Metrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pbmld.Metric metrics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->metrics(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.Metrics)
}

::google::protobuf::uint8* Metrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pbmld.Metric metrics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->metrics(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.Metrics)
  return target;
}

size_t Metrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.Metrics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pbmld.Metric metrics = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->metrics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metrics(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Metrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.Metrics)
  GOOGLE_DCHECK_NE(&from, this);
  const Metrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.Metrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.Metrics)
    MergeFrom(*source);
  }
}

void Metrics::MergeFrom(const Metrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.Metrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
}

void Metrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.Metrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metrics::CopyFrom(const Metrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.Metrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metrics::IsInitialized() const {
  return true;
}

void Metrics::Swap(Metrics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metrics::InternalSwap(Metrics* other) {
  using std::swap;
  metrics_.InternalSwap(&other->metrics_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Metrics::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Metrics

// repeated .pbmld.Metric metrics = 1;
int Metrics::metrics_size() const {
  return metrics_.size();
}
void Metrics::clear_metrics() {
  metrics_.Clear();
}
const ::pbmld::Metric& Metrics::metrics(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.Metrics.metrics)
  return metrics_.Get(index);
}
::pbmld::Metric* Metrics::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:pbmld.Metrics.metrics)
  return metrics_.Mutable(index);
}
::pbmld::Metric* Metrics::add_metrics() {
  // @@protoc_insertion_point(field_add:pbmld.Metrics.metrics)
  return metrics_.Add();
}
::google::protobuf::RepeatedPtrField< ::pbmld::Metric >*
Metrics::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.Metrics.metrics)
  return &metrics_;
}
const ::google::protobuf::RepeatedPtrField< ::pbmld::Metric >&
Metrics::metrics() const {
  // @@protoc_insertion_point(field_list:pbmld.Metrics.metrics)
  return metrics_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EdgeData::kTargetFieldNumber;
const int EdgeData::kTurnIdFieldNumber;
const int EdgeData::kIsForwardFieldNumber;
const int EdgeData::kIsBackwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EdgeData::EdgeData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mld_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.EdgeData)
}
EdgeData::EdgeData(const EdgeData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_backward_) -
    reinterpret_cast<char*>(&target_)) + sizeof(is_backward_));
  // @@protoc_insertion_point(copy_constructor:pbmld.EdgeData)
}

void EdgeData::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_backward_) -
      reinterpret_cast<char*>(&target_)) + sizeof(is_backward_));
  _cached_size_ = 0;
}

EdgeData::~EdgeData() {
  // @@protoc_insertion_point(destructor:pbmld.EdgeData)
  SharedDtor();
}

void EdgeData::SharedDtor() {
}

void EdgeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EdgeData::descriptor() {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EdgeData& EdgeData::default_instance() {
  protobuf_mld_2eproto::InitDefaults();
  return *internal_default_instance();
}

EdgeData* EdgeData::New(::google::protobuf::Arena* arena) const {
  EdgeData* n = new EdgeData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EdgeData::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.EdgeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_backward_) -
      reinterpret_cast<char*>(&target_)) + sizeof(is_backward_));
  _internal_metadata_.Clear();
}

bool EdgeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.EdgeData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 turn_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &turn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_forward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_forward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_backward = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_backward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.EdgeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.EdgeData)
  return false;
#undef DO_
}

void EdgeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.EdgeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  // uint32 turn_id = 2;
  if (this->turn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->turn_id(), output);
  }

  // bool is_forward = 3;
  if (this->is_forward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_forward(), output);
  }

  // bool is_backward = 4;
  if (this->is_backward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_backward(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.EdgeData)
}

::google::protobuf::uint8* EdgeData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.EdgeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  // uint32 turn_id = 2;
  if (this->turn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->turn_id(), target);
  }

  // bool is_forward = 3;
  if (this->is_forward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_forward(), target);
  }

  // bool is_backward = 4;
  if (this->is_backward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_backward(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.EdgeData)
  return target;
}

size_t EdgeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.EdgeData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target = 1;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  // uint32 turn_id = 2;
  if (this->turn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->turn_id());
  }

  // bool is_forward = 3;
  if (this->is_forward() != 0) {
    total_size += 1 + 1;
  }

  // bool is_backward = 4;
  if (this->is_backward() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EdgeData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.EdgeData)
  GOOGLE_DCHECK_NE(&from, this);
  const EdgeData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EdgeData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.EdgeData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.EdgeData)
    MergeFrom(*source);
  }
}

void EdgeData::MergeFrom(const EdgeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.EdgeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.turn_id() != 0) {
    set_turn_id(from.turn_id());
  }
  if (from.is_forward() != 0) {
    set_is_forward(from.is_forward());
  }
  if (from.is_backward() != 0) {
    set_is_backward(from.is_backward());
  }
}

void EdgeData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.EdgeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeData::CopyFrom(const EdgeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.EdgeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeData::IsInitialized() const {
  return true;
}

void EdgeData::Swap(EdgeData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EdgeData::InternalSwap(EdgeData* other) {
  using std::swap;
  swap(target_, other->target_);
  swap(turn_id_, other->turn_id_);
  swap(is_forward_, other->is_forward_);
  swap(is_backward_, other->is_backward_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EdgeData::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EdgeData

// uint32 target = 1;
void EdgeData::clear_target() {
  target_ = 0u;
}
::google::protobuf::uint32 EdgeData::target() const {
  // @@protoc_insertion_point(field_get:pbmld.EdgeData.target)
  return target_;
}
void EdgeData::set_target(::google::protobuf::uint32 value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:pbmld.EdgeData.target)
}

// uint32 turn_id = 2;
void EdgeData::clear_turn_id() {
  turn_id_ = 0u;
}
::google::protobuf::uint32 EdgeData::turn_id() const {
  // @@protoc_insertion_point(field_get:pbmld.EdgeData.turn_id)
  return turn_id_;
}
void EdgeData::set_turn_id(::google::protobuf::uint32 value) {
  
  turn_id_ = value;
  // @@protoc_insertion_point(field_set:pbmld.EdgeData.turn_id)
}

// bool is_forward = 3;
void EdgeData::clear_is_forward() {
  is_forward_ = false;
}
bool EdgeData::is_forward() const {
  // @@protoc_insertion_point(field_get:pbmld.EdgeData.is_forward)
  return is_forward_;
}
void EdgeData::set_is_forward(bool value) {
  
  is_forward_ = value;
  // @@protoc_insertion_point(field_set:pbmld.EdgeData.is_forward)
}

// bool is_backward = 4;
void EdgeData::clear_is_backward() {
  is_backward_ = false;
}
bool EdgeData::is_backward() const {
  // @@protoc_insertion_point(field_get:pbmld.EdgeData.is_backward)
  return is_backward_;
}
void EdgeData::set_is_backward(bool value) {
  
  is_backward_ = value;
  // @@protoc_insertion_point(field_set:pbmld.EdgeData.is_backward)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryGraph::kNodesFieldNumber;
const int QueryGraph::kEdgesFieldNumber;
const int QueryGraph::kNodeLevelOffsetFieldNumber;
const int QueryGraph::kNodeWeightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryGraph::QueryGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mld_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmld.QueryGraph)
}
QueryGraph::QueryGraph(const QueryGraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_),
      edges_(from.edges_),
      node_level_offset_(from.node_level_offset_),
      node_weights_(from.node_weights_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbmld.QueryGraph)
}

void QueryGraph::SharedCtor() {
  _cached_size_ = 0;
}

QueryGraph::~QueryGraph() {
  // @@protoc_insertion_point(destructor:pbmld.QueryGraph)
  SharedDtor();
}

void QueryGraph::SharedDtor() {
}

void QueryGraph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryGraph::descriptor() {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryGraph& QueryGraph::default_instance() {
  protobuf_mld_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryGraph* QueryGraph::New(::google::protobuf::Arena* arena) const {
  QueryGraph* n = new QueryGraph;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmld.QueryGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  edges_.Clear();
  node_level_offset_.Clear();
  node_weights_.Clear();
  _internal_metadata_.Clear();
}

bool QueryGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmld.QueryGraph)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_nodes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_nodes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pbmld.EdgeData edges = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_edges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 node_level_offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_node_level_offset())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_node_level_offset())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 node_weights = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_node_weights())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_node_weights())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmld.QueryGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmld.QueryGraph)
  return false;
#undef DO_
}

void QueryGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmld.QueryGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 nodes = 1;
  if (this->nodes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _nodes_cached_byte_size_));
  }
  for (int i = 0, n = this->nodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->nodes(i), output);
  }

  // repeated .pbmld.EdgeData edges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->edges(static_cast<int>(i)), output);
  }

  // repeated uint32 node_level_offset = 3;
  if (this->node_level_offset_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _node_level_offset_cached_byte_size_));
  }
  for (int i = 0, n = this->node_level_offset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->node_level_offset(i), output);
  }

  // repeated int32 node_weights = 4;
  if (this->node_weights_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _node_weights_cached_byte_size_));
  }
  for (int i = 0, n = this->node_weights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->node_weights(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmld.QueryGraph)
}

::google::protobuf::uint8* QueryGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbmld.QueryGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 nodes = 1;
  if (this->nodes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _nodes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->nodes_, target);
  }

  // repeated .pbmld.EdgeData edges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->edges(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 node_level_offset = 3;
  if (this->node_level_offset_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _node_level_offset_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->node_level_offset_, target);
  }

  // repeated int32 node_weights = 4;
  if (this->node_weights_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _node_weights_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->node_weights_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmld.QueryGraph)
  return target;
}

size_t QueryGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbmld.QueryGraph)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 nodes = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->nodes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nodes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .pbmld.EdgeData edges = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->edges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->edges(static_cast<int>(i)));
    }
  }

  // repeated uint32 node_level_offset = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->node_level_offset_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _node_level_offset_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 node_weights = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->node_weights_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _node_weights_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmld.QueryGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryGraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmld.QueryGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmld.QueryGraph)
    MergeFrom(*source);
  }
}

void QueryGraph::MergeFrom(const QueryGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmld.QueryGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  edges_.MergeFrom(from.edges_);
  node_level_offset_.MergeFrom(from.node_level_offset_);
  node_weights_.MergeFrom(from.node_weights_);
}

void QueryGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmld.QueryGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryGraph::CopyFrom(const QueryGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmld.QueryGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryGraph::IsInitialized() const {
  return true;
}

void QueryGraph::Swap(QueryGraph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryGraph::InternalSwap(QueryGraph* other) {
  using std::swap;
  nodes_.InternalSwap(&other->nodes_);
  edges_.InternalSwap(&other->edges_);
  node_level_offset_.InternalSwap(&other->node_level_offset_);
  node_weights_.InternalSwap(&other->node_weights_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryGraph::GetMetadata() const {
  protobuf_mld_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mld_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryGraph

// repeated uint32 nodes = 1;
int QueryGraph::nodes_size() const {
  return nodes_.size();
}
void QueryGraph::clear_nodes() {
  nodes_.Clear();
}
::google::protobuf::uint32 QueryGraph::nodes(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.QueryGraph.nodes)
  return nodes_.Get(index);
}
void QueryGraph::set_nodes(int index, ::google::protobuf::uint32 value) {
  nodes_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmld.QueryGraph.nodes)
}
void QueryGraph::add_nodes(::google::protobuf::uint32 value) {
  nodes_.Add(value);
  // @@protoc_insertion_point(field_add:pbmld.QueryGraph.nodes)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QueryGraph::nodes() const {
  // @@protoc_insertion_point(field_list:pbmld.QueryGraph.nodes)
  return nodes_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QueryGraph::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.QueryGraph.nodes)
  return &nodes_;
}

// repeated .pbmld.EdgeData edges = 2;
int QueryGraph::edges_size() const {
  return edges_.size();
}
void QueryGraph::clear_edges() {
  edges_.Clear();
}
const ::pbmld::EdgeData& QueryGraph::edges(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.QueryGraph.edges)
  return edges_.Get(index);
}
::pbmld::EdgeData* QueryGraph::mutable_edges(int index) {
  // @@protoc_insertion_point(field_mutable:pbmld.QueryGraph.edges)
  return edges_.Mutable(index);
}
::pbmld::EdgeData* QueryGraph::add_edges() {
  // @@protoc_insertion_point(field_add:pbmld.QueryGraph.edges)
  return edges_.Add();
}
::google::protobuf::RepeatedPtrField< ::pbmld::EdgeData >*
QueryGraph::mutable_edges() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.QueryGraph.edges)
  return &edges_;
}
const ::google::protobuf::RepeatedPtrField< ::pbmld::EdgeData >&
QueryGraph::edges() const {
  // @@protoc_insertion_point(field_list:pbmld.QueryGraph.edges)
  return edges_;
}

// repeated uint32 node_level_offset = 3;
int QueryGraph::node_level_offset_size() const {
  return node_level_offset_.size();
}
void QueryGraph::clear_node_level_offset() {
  node_level_offset_.Clear();
}
::google::protobuf::uint32 QueryGraph::node_level_offset(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.QueryGraph.node_level_offset)
  return node_level_offset_.Get(index);
}
void QueryGraph::set_node_level_offset(int index, ::google::protobuf::uint32 value) {
  node_level_offset_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmld.QueryGraph.node_level_offset)
}
void QueryGraph::add_node_level_offset(::google::protobuf::uint32 value) {
  node_level_offset_.Add(value);
  // @@protoc_insertion_point(field_add:pbmld.QueryGraph.node_level_offset)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QueryGraph::node_level_offset() const {
  // @@protoc_insertion_point(field_list:pbmld.QueryGraph.node_level_offset)
  return node_level_offset_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QueryGraph::mutable_node_level_offset() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.QueryGraph.node_level_offset)
  return &node_level_offset_;
}

// repeated int32 node_weights = 4;
int QueryGraph::node_weights_size() const {
  return node_weights_.size();
}
void QueryGraph::clear_node_weights() {
  node_weights_.Clear();
}
::google::protobuf::int32 QueryGraph::node_weights(int index) const {
  // @@protoc_insertion_point(field_get:pbmld.QueryGraph.node_weights)
  return node_weights_.Get(index);
}
void QueryGraph::set_node_weights(int index, ::google::protobuf::int32 value) {
  node_weights_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbmld.QueryGraph.node_weights)
}
void QueryGraph::add_node_weights(::google::protobuf::int32 value) {
  node_weights_.Add(value);
  // @@protoc_insertion_point(field_add:pbmld.QueryGraph.node_weights)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QueryGraph::node_weights() const {
  // @@protoc_insertion_point(field_list:pbmld.QueryGraph.node_weights)
  return node_weights_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QueryGraph::mutable_node_weights() {
  // @@protoc_insertion_point(field_mutable_list:pbmld.QueryGraph.node_weights)
  return &node_weights_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pbmld

// @@protoc_insertion_point(global_scope)
