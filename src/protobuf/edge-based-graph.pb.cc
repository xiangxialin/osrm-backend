// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: edge-based-graph.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "edge-based-graph.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pbebg {
class EdgeBasedNodeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EdgeBasedNode>
     _instance;
} _EdgeBasedNode_default_instance_;
class NodeBasedAnnotationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NodeBasedAnnotation>
     _instance;
} _NodeBasedAnnotation_default_instance_;
class EdgeBasedNodeContainerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EdgeBasedNodeContainer>
     _instance;
} _EdgeBasedNodeContainer_default_instance_;
class TurnInstructionsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TurnInstructions>
     _instance;
} _TurnInstructions_default_instance_;
class TurnPenaltiesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TurnPenalties>
     _instance;
} _TurnPenalties_default_instance_;

namespace protobuf_edge_2dbased_2dgraph_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeBasedNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeBasedNode, geometry_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeBasedNode, component_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeBasedNode, annotation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeBasedNode, is_tiny_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeBasedNode, segregated_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeBasedAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeBasedAnnotation, name_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeBasedNodeContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeBasedNodeContainer, nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeBasedNodeContainer, annotation_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnInstructions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnInstructions, turn_instruction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnPenalties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnPenalties, turn_penalties_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(EdgeBasedNode)},
  { 10, -1, sizeof(NodeBasedAnnotation)},
  { 16, -1, sizeof(EdgeBasedNodeContainer)},
  { 23, -1, sizeof(TurnInstructions)},
  { 29, -1, sizeof(TurnPenalties)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_EdgeBasedNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NodeBasedAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EdgeBasedNodeContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TurnInstructions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TurnPenalties_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "edge-based-graph.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _EdgeBasedNode_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EdgeBasedNode_default_instance_);_NodeBasedAnnotation_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NodeBasedAnnotation_default_instance_);_EdgeBasedNodeContainer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EdgeBasedNodeContainer_default_instance_);_TurnInstructions_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TurnInstructions_default_instance_);_TurnPenalties_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TurnPenalties_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026edge-based-graph.proto\022\005pbebg\"v\n\rEdgeB"
      "asedNode\022\023\n\013geometry_id\030\001 \001(\r\022\024\n\014compone"
      "nt_id\030\002 \001(\r\022\025\n\rannotation_id\030\003 \001(\r\022\017\n\007is"
      "_tiny\030\004 \001(\010\022\022\n\nsegregated\030\005 \001(\010\"&\n\023NodeB"
      "asedAnnotation\022\017\n\007name_id\030\001 \001(\r\"r\n\026EdgeB"
      "asedNodeContainer\022#\n\005nodes\030\001 \003(\0132\024.pbebg"
      ".EdgeBasedNode\0223\n\017annotation_data\030\002 \003(\0132"
      "\032.pbebg.NodeBasedAnnotation\",\n\020TurnInstr"
      "uctions\022\030\n\020turn_instruction\030\001 \003(\r\"\'\n\rTur"
      "nPenalties\022\026\n\016turn_penalties\030\001 \003(\rb\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 402);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "edge-based-graph.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_edge_2dbased_2dgraph_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EdgeBasedNode::kGeometryIdFieldNumber;
const int EdgeBasedNode::kComponentIdFieldNumber;
const int EdgeBasedNode::kAnnotationIdFieldNumber;
const int EdgeBasedNode::kIsTinyFieldNumber;
const int EdgeBasedNode::kSegregatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EdgeBasedNode::EdgeBasedNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_edge_2dbased_2dgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbebg.EdgeBasedNode)
}
EdgeBasedNode::EdgeBasedNode(const EdgeBasedNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&geometry_id_, &from.geometry_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&segregated_) -
    reinterpret_cast<char*>(&geometry_id_)) + sizeof(segregated_));
  // @@protoc_insertion_point(copy_constructor:pbebg.EdgeBasedNode)
}

void EdgeBasedNode::SharedCtor() {
  ::memset(&geometry_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&segregated_) -
      reinterpret_cast<char*>(&geometry_id_)) + sizeof(segregated_));
  _cached_size_ = 0;
}

EdgeBasedNode::~EdgeBasedNode() {
  // @@protoc_insertion_point(destructor:pbebg.EdgeBasedNode)
  SharedDtor();
}

void EdgeBasedNode::SharedDtor() {
}

void EdgeBasedNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EdgeBasedNode::descriptor() {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EdgeBasedNode& EdgeBasedNode::default_instance() {
  protobuf_edge_2dbased_2dgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

EdgeBasedNode* EdgeBasedNode::New(::google::protobuf::Arena* arena) const {
  EdgeBasedNode* n = new EdgeBasedNode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EdgeBasedNode::Clear() {
// @@protoc_insertion_point(message_clear_start:pbebg.EdgeBasedNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&geometry_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&segregated_) -
      reinterpret_cast<char*>(&geometry_id_)) + sizeof(segregated_));
  _internal_metadata_.Clear();
}

bool EdgeBasedNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbebg.EdgeBasedNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 geometry_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &geometry_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 component_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &component_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 annotation_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &annotation_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_tiny = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_tiny_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool segregated = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &segregated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbebg.EdgeBasedNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbebg.EdgeBasedNode)
  return false;
#undef DO_
}

void EdgeBasedNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbebg.EdgeBasedNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 geometry_id = 1;
  if (this->geometry_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->geometry_id(), output);
  }

  // uint32 component_id = 2;
  if (this->component_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->component_id(), output);
  }

  // uint32 annotation_id = 3;
  if (this->annotation_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->annotation_id(), output);
  }

  // bool is_tiny = 4;
  if (this->is_tiny() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_tiny(), output);
  }

  // bool segregated = 5;
  if (this->segregated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->segregated(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbebg.EdgeBasedNode)
}

::google::protobuf::uint8* EdgeBasedNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbebg.EdgeBasedNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 geometry_id = 1;
  if (this->geometry_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->geometry_id(), target);
  }

  // uint32 component_id = 2;
  if (this->component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->component_id(), target);
  }

  // uint32 annotation_id = 3;
  if (this->annotation_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->annotation_id(), target);
  }

  // bool is_tiny = 4;
  if (this->is_tiny() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_tiny(), target);
  }

  // bool segregated = 5;
  if (this->segregated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->segregated(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbebg.EdgeBasedNode)
  return target;
}

size_t EdgeBasedNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbebg.EdgeBasedNode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 geometry_id = 1;
  if (this->geometry_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->geometry_id());
  }

  // uint32 component_id = 2;
  if (this->component_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->component_id());
  }

  // uint32 annotation_id = 3;
  if (this->annotation_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->annotation_id());
  }

  // bool is_tiny = 4;
  if (this->is_tiny() != 0) {
    total_size += 1 + 1;
  }

  // bool segregated = 5;
  if (this->segregated() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EdgeBasedNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbebg.EdgeBasedNode)
  GOOGLE_DCHECK_NE(&from, this);
  const EdgeBasedNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EdgeBasedNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbebg.EdgeBasedNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbebg.EdgeBasedNode)
    MergeFrom(*source);
  }
}

void EdgeBasedNode::MergeFrom(const EdgeBasedNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbebg.EdgeBasedNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.geometry_id() != 0) {
    set_geometry_id(from.geometry_id());
  }
  if (from.component_id() != 0) {
    set_component_id(from.component_id());
  }
  if (from.annotation_id() != 0) {
    set_annotation_id(from.annotation_id());
  }
  if (from.is_tiny() != 0) {
    set_is_tiny(from.is_tiny());
  }
  if (from.segregated() != 0) {
    set_segregated(from.segregated());
  }
}

void EdgeBasedNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbebg.EdgeBasedNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeBasedNode::CopyFrom(const EdgeBasedNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbebg.EdgeBasedNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeBasedNode::IsInitialized() const {
  return true;
}

void EdgeBasedNode::Swap(EdgeBasedNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EdgeBasedNode::InternalSwap(EdgeBasedNode* other) {
  using std::swap;
  swap(geometry_id_, other->geometry_id_);
  swap(component_id_, other->component_id_);
  swap(annotation_id_, other->annotation_id_);
  swap(is_tiny_, other->is_tiny_);
  swap(segregated_, other->segregated_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EdgeBasedNode::GetMetadata() const {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EdgeBasedNode

// uint32 geometry_id = 1;
void EdgeBasedNode::clear_geometry_id() {
  geometry_id_ = 0u;
}
::google::protobuf::uint32 EdgeBasedNode::geometry_id() const {
  // @@protoc_insertion_point(field_get:pbebg.EdgeBasedNode.geometry_id)
  return geometry_id_;
}
void EdgeBasedNode::set_geometry_id(::google::protobuf::uint32 value) {
  
  geometry_id_ = value;
  // @@protoc_insertion_point(field_set:pbebg.EdgeBasedNode.geometry_id)
}

// uint32 component_id = 2;
void EdgeBasedNode::clear_component_id() {
  component_id_ = 0u;
}
::google::protobuf::uint32 EdgeBasedNode::component_id() const {
  // @@protoc_insertion_point(field_get:pbebg.EdgeBasedNode.component_id)
  return component_id_;
}
void EdgeBasedNode::set_component_id(::google::protobuf::uint32 value) {
  
  component_id_ = value;
  // @@protoc_insertion_point(field_set:pbebg.EdgeBasedNode.component_id)
}

// uint32 annotation_id = 3;
void EdgeBasedNode::clear_annotation_id() {
  annotation_id_ = 0u;
}
::google::protobuf::uint32 EdgeBasedNode::annotation_id() const {
  // @@protoc_insertion_point(field_get:pbebg.EdgeBasedNode.annotation_id)
  return annotation_id_;
}
void EdgeBasedNode::set_annotation_id(::google::protobuf::uint32 value) {
  
  annotation_id_ = value;
  // @@protoc_insertion_point(field_set:pbebg.EdgeBasedNode.annotation_id)
}

// bool is_tiny = 4;
void EdgeBasedNode::clear_is_tiny() {
  is_tiny_ = false;
}
bool EdgeBasedNode::is_tiny() const {
  // @@protoc_insertion_point(field_get:pbebg.EdgeBasedNode.is_tiny)
  return is_tiny_;
}
void EdgeBasedNode::set_is_tiny(bool value) {
  
  is_tiny_ = value;
  // @@protoc_insertion_point(field_set:pbebg.EdgeBasedNode.is_tiny)
}

// bool segregated = 5;
void EdgeBasedNode::clear_segregated() {
  segregated_ = false;
}
bool EdgeBasedNode::segregated() const {
  // @@protoc_insertion_point(field_get:pbebg.EdgeBasedNode.segregated)
  return segregated_;
}
void EdgeBasedNode::set_segregated(bool value) {
  
  segregated_ = value;
  // @@protoc_insertion_point(field_set:pbebg.EdgeBasedNode.segregated)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeBasedAnnotation::kNameIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeBasedAnnotation::NodeBasedAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_edge_2dbased_2dgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbebg.NodeBasedAnnotation)
}
NodeBasedAnnotation::NodeBasedAnnotation(const NodeBasedAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_id_ = from.name_id_;
  // @@protoc_insertion_point(copy_constructor:pbebg.NodeBasedAnnotation)
}

void NodeBasedAnnotation::SharedCtor() {
  name_id_ = 0u;
  _cached_size_ = 0;
}

NodeBasedAnnotation::~NodeBasedAnnotation() {
  // @@protoc_insertion_point(destructor:pbebg.NodeBasedAnnotation)
  SharedDtor();
}

void NodeBasedAnnotation::SharedDtor() {
}

void NodeBasedAnnotation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeBasedAnnotation::descriptor() {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeBasedAnnotation& NodeBasedAnnotation::default_instance() {
  protobuf_edge_2dbased_2dgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

NodeBasedAnnotation* NodeBasedAnnotation::New(::google::protobuf::Arena* arena) const {
  NodeBasedAnnotation* n = new NodeBasedAnnotation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeBasedAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:pbebg.NodeBasedAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_id_ = 0u;
  _internal_metadata_.Clear();
}

bool NodeBasedAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbebg.NodeBasedAnnotation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 name_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbebg.NodeBasedAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbebg.NodeBasedAnnotation)
  return false;
#undef DO_
}

void NodeBasedAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbebg.NodeBasedAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 name_id = 1;
  if (this->name_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->name_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbebg.NodeBasedAnnotation)
}

::google::protobuf::uint8* NodeBasedAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbebg.NodeBasedAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 name_id = 1;
  if (this->name_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->name_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbebg.NodeBasedAnnotation)
  return target;
}

size_t NodeBasedAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbebg.NodeBasedAnnotation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 name_id = 1;
  if (this->name_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->name_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeBasedAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbebg.NodeBasedAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeBasedAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeBasedAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbebg.NodeBasedAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbebg.NodeBasedAnnotation)
    MergeFrom(*source);
  }
}

void NodeBasedAnnotation::MergeFrom(const NodeBasedAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbebg.NodeBasedAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name_id() != 0) {
    set_name_id(from.name_id());
  }
}

void NodeBasedAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbebg.NodeBasedAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeBasedAnnotation::CopyFrom(const NodeBasedAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbebg.NodeBasedAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeBasedAnnotation::IsInitialized() const {
  return true;
}

void NodeBasedAnnotation::Swap(NodeBasedAnnotation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeBasedAnnotation::InternalSwap(NodeBasedAnnotation* other) {
  using std::swap;
  swap(name_id_, other->name_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeBasedAnnotation::GetMetadata() const {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NodeBasedAnnotation

// uint32 name_id = 1;
void NodeBasedAnnotation::clear_name_id() {
  name_id_ = 0u;
}
::google::protobuf::uint32 NodeBasedAnnotation::name_id() const {
  // @@protoc_insertion_point(field_get:pbebg.NodeBasedAnnotation.name_id)
  return name_id_;
}
void NodeBasedAnnotation::set_name_id(::google::protobuf::uint32 value) {
  
  name_id_ = value;
  // @@protoc_insertion_point(field_set:pbebg.NodeBasedAnnotation.name_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EdgeBasedNodeContainer::kNodesFieldNumber;
const int EdgeBasedNodeContainer::kAnnotationDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EdgeBasedNodeContainer::EdgeBasedNodeContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_edge_2dbased_2dgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbebg.EdgeBasedNodeContainer)
}
EdgeBasedNodeContainer::EdgeBasedNodeContainer(const EdgeBasedNodeContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_),
      annotation_data_(from.annotation_data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbebg.EdgeBasedNodeContainer)
}

void EdgeBasedNodeContainer::SharedCtor() {
  _cached_size_ = 0;
}

EdgeBasedNodeContainer::~EdgeBasedNodeContainer() {
  // @@protoc_insertion_point(destructor:pbebg.EdgeBasedNodeContainer)
  SharedDtor();
}

void EdgeBasedNodeContainer::SharedDtor() {
}

void EdgeBasedNodeContainer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EdgeBasedNodeContainer::descriptor() {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EdgeBasedNodeContainer& EdgeBasedNodeContainer::default_instance() {
  protobuf_edge_2dbased_2dgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

EdgeBasedNodeContainer* EdgeBasedNodeContainer::New(::google::protobuf::Arena* arena) const {
  EdgeBasedNodeContainer* n = new EdgeBasedNodeContainer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EdgeBasedNodeContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:pbebg.EdgeBasedNodeContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  annotation_data_.Clear();
  _internal_metadata_.Clear();
}

bool EdgeBasedNodeContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbebg.EdgeBasedNodeContainer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pbebg.EdgeBasedNode nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pbebg.NodeBasedAnnotation annotation_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_annotation_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbebg.EdgeBasedNodeContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbebg.EdgeBasedNodeContainer)
  return false;
#undef DO_
}

void EdgeBasedNodeContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbebg.EdgeBasedNodeContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pbebg.EdgeBasedNode nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodes(static_cast<int>(i)), output);
  }

  // repeated .pbebg.NodeBasedAnnotation annotation_data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->annotation_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->annotation_data(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbebg.EdgeBasedNodeContainer)
}

::google::protobuf::uint8* EdgeBasedNodeContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbebg.EdgeBasedNodeContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pbebg.EdgeBasedNode nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pbebg.NodeBasedAnnotation annotation_data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->annotation_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->annotation_data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbebg.EdgeBasedNodeContainer)
  return target;
}

size_t EdgeBasedNodeContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbebg.EdgeBasedNodeContainer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pbebg.EdgeBasedNode nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodes(static_cast<int>(i)));
    }
  }

  // repeated .pbebg.NodeBasedAnnotation annotation_data = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->annotation_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->annotation_data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EdgeBasedNodeContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbebg.EdgeBasedNodeContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const EdgeBasedNodeContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EdgeBasedNodeContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbebg.EdgeBasedNodeContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbebg.EdgeBasedNodeContainer)
    MergeFrom(*source);
  }
}

void EdgeBasedNodeContainer::MergeFrom(const EdgeBasedNodeContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbebg.EdgeBasedNodeContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  annotation_data_.MergeFrom(from.annotation_data_);
}

void EdgeBasedNodeContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbebg.EdgeBasedNodeContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeBasedNodeContainer::CopyFrom(const EdgeBasedNodeContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbebg.EdgeBasedNodeContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeBasedNodeContainer::IsInitialized() const {
  return true;
}

void EdgeBasedNodeContainer::Swap(EdgeBasedNodeContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EdgeBasedNodeContainer::InternalSwap(EdgeBasedNodeContainer* other) {
  using std::swap;
  nodes_.InternalSwap(&other->nodes_);
  annotation_data_.InternalSwap(&other->annotation_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EdgeBasedNodeContainer::GetMetadata() const {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EdgeBasedNodeContainer

// repeated .pbebg.EdgeBasedNode nodes = 1;
int EdgeBasedNodeContainer::nodes_size() const {
  return nodes_.size();
}
void EdgeBasedNodeContainer::clear_nodes() {
  nodes_.Clear();
}
const ::pbebg::EdgeBasedNode& EdgeBasedNodeContainer::nodes(int index) const {
  // @@protoc_insertion_point(field_get:pbebg.EdgeBasedNodeContainer.nodes)
  return nodes_.Get(index);
}
::pbebg::EdgeBasedNode* EdgeBasedNodeContainer::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:pbebg.EdgeBasedNodeContainer.nodes)
  return nodes_.Mutable(index);
}
::pbebg::EdgeBasedNode* EdgeBasedNodeContainer::add_nodes() {
  // @@protoc_insertion_point(field_add:pbebg.EdgeBasedNodeContainer.nodes)
  return nodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::pbebg::EdgeBasedNode >*
EdgeBasedNodeContainer::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:pbebg.EdgeBasedNodeContainer.nodes)
  return &nodes_;
}
const ::google::protobuf::RepeatedPtrField< ::pbebg::EdgeBasedNode >&
EdgeBasedNodeContainer::nodes() const {
  // @@protoc_insertion_point(field_list:pbebg.EdgeBasedNodeContainer.nodes)
  return nodes_;
}

// repeated .pbebg.NodeBasedAnnotation annotation_data = 2;
int EdgeBasedNodeContainer::annotation_data_size() const {
  return annotation_data_.size();
}
void EdgeBasedNodeContainer::clear_annotation_data() {
  annotation_data_.Clear();
}
const ::pbebg::NodeBasedAnnotation& EdgeBasedNodeContainer::annotation_data(int index) const {
  // @@protoc_insertion_point(field_get:pbebg.EdgeBasedNodeContainer.annotation_data)
  return annotation_data_.Get(index);
}
::pbebg::NodeBasedAnnotation* EdgeBasedNodeContainer::mutable_annotation_data(int index) {
  // @@protoc_insertion_point(field_mutable:pbebg.EdgeBasedNodeContainer.annotation_data)
  return annotation_data_.Mutable(index);
}
::pbebg::NodeBasedAnnotation* EdgeBasedNodeContainer::add_annotation_data() {
  // @@protoc_insertion_point(field_add:pbebg.EdgeBasedNodeContainer.annotation_data)
  return annotation_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::pbebg::NodeBasedAnnotation >*
EdgeBasedNodeContainer::mutable_annotation_data() {
  // @@protoc_insertion_point(field_mutable_list:pbebg.EdgeBasedNodeContainer.annotation_data)
  return &annotation_data_;
}
const ::google::protobuf::RepeatedPtrField< ::pbebg::NodeBasedAnnotation >&
EdgeBasedNodeContainer::annotation_data() const {
  // @@protoc_insertion_point(field_list:pbebg.EdgeBasedNodeContainer.annotation_data)
  return annotation_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TurnInstructions::kTurnInstructionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TurnInstructions::TurnInstructions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_edge_2dbased_2dgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbebg.TurnInstructions)
}
TurnInstructions::TurnInstructions(const TurnInstructions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      turn_instruction_(from.turn_instruction_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbebg.TurnInstructions)
}

void TurnInstructions::SharedCtor() {
  _cached_size_ = 0;
}

TurnInstructions::~TurnInstructions() {
  // @@protoc_insertion_point(destructor:pbebg.TurnInstructions)
  SharedDtor();
}

void TurnInstructions::SharedDtor() {
}

void TurnInstructions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TurnInstructions::descriptor() {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TurnInstructions& TurnInstructions::default_instance() {
  protobuf_edge_2dbased_2dgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

TurnInstructions* TurnInstructions::New(::google::protobuf::Arena* arena) const {
  TurnInstructions* n = new TurnInstructions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TurnInstructions::Clear() {
// @@protoc_insertion_point(message_clear_start:pbebg.TurnInstructions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  turn_instruction_.Clear();
  _internal_metadata_.Clear();
}

bool TurnInstructions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbebg.TurnInstructions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 turn_instruction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_turn_instruction())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_turn_instruction())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbebg.TurnInstructions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbebg.TurnInstructions)
  return false;
#undef DO_
}

void TurnInstructions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbebg.TurnInstructions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 turn_instruction = 1;
  if (this->turn_instruction_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _turn_instruction_cached_byte_size_));
  }
  for (int i = 0, n = this->turn_instruction_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->turn_instruction(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbebg.TurnInstructions)
}

::google::protobuf::uint8* TurnInstructions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbebg.TurnInstructions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 turn_instruction = 1;
  if (this->turn_instruction_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _turn_instruction_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->turn_instruction_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbebg.TurnInstructions)
  return target;
}

size_t TurnInstructions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbebg.TurnInstructions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 turn_instruction = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->turn_instruction_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _turn_instruction_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TurnInstructions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbebg.TurnInstructions)
  GOOGLE_DCHECK_NE(&from, this);
  const TurnInstructions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TurnInstructions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbebg.TurnInstructions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbebg.TurnInstructions)
    MergeFrom(*source);
  }
}

void TurnInstructions::MergeFrom(const TurnInstructions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbebg.TurnInstructions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  turn_instruction_.MergeFrom(from.turn_instruction_);
}

void TurnInstructions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbebg.TurnInstructions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TurnInstructions::CopyFrom(const TurnInstructions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbebg.TurnInstructions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TurnInstructions::IsInitialized() const {
  return true;
}

void TurnInstructions::Swap(TurnInstructions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TurnInstructions::InternalSwap(TurnInstructions* other) {
  using std::swap;
  turn_instruction_.InternalSwap(&other->turn_instruction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TurnInstructions::GetMetadata() const {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TurnInstructions

// repeated uint32 turn_instruction = 1;
int TurnInstructions::turn_instruction_size() const {
  return turn_instruction_.size();
}
void TurnInstructions::clear_turn_instruction() {
  turn_instruction_.Clear();
}
::google::protobuf::uint32 TurnInstructions::turn_instruction(int index) const {
  // @@protoc_insertion_point(field_get:pbebg.TurnInstructions.turn_instruction)
  return turn_instruction_.Get(index);
}
void TurnInstructions::set_turn_instruction(int index, ::google::protobuf::uint32 value) {
  turn_instruction_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbebg.TurnInstructions.turn_instruction)
}
void TurnInstructions::add_turn_instruction(::google::protobuf::uint32 value) {
  turn_instruction_.Add(value);
  // @@protoc_insertion_point(field_add:pbebg.TurnInstructions.turn_instruction)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TurnInstructions::turn_instruction() const {
  // @@protoc_insertion_point(field_list:pbebg.TurnInstructions.turn_instruction)
  return turn_instruction_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TurnInstructions::mutable_turn_instruction() {
  // @@protoc_insertion_point(field_mutable_list:pbebg.TurnInstructions.turn_instruction)
  return &turn_instruction_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TurnPenalties::kTurnPenaltiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TurnPenalties::TurnPenalties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_edge_2dbased_2dgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbebg.TurnPenalties)
}
TurnPenalties::TurnPenalties(const TurnPenalties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      turn_penalties_(from.turn_penalties_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbebg.TurnPenalties)
}

void TurnPenalties::SharedCtor() {
  _cached_size_ = 0;
}

TurnPenalties::~TurnPenalties() {
  // @@protoc_insertion_point(destructor:pbebg.TurnPenalties)
  SharedDtor();
}

void TurnPenalties::SharedDtor() {
}

void TurnPenalties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TurnPenalties::descriptor() {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TurnPenalties& TurnPenalties::default_instance() {
  protobuf_edge_2dbased_2dgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

TurnPenalties* TurnPenalties::New(::google::protobuf::Arena* arena) const {
  TurnPenalties* n = new TurnPenalties;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TurnPenalties::Clear() {
// @@protoc_insertion_point(message_clear_start:pbebg.TurnPenalties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  turn_penalties_.Clear();
  _internal_metadata_.Clear();
}

bool TurnPenalties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbebg.TurnPenalties)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 turn_penalties = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_turn_penalties())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_turn_penalties())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbebg.TurnPenalties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbebg.TurnPenalties)
  return false;
#undef DO_
}

void TurnPenalties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbebg.TurnPenalties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 turn_penalties = 1;
  if (this->turn_penalties_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _turn_penalties_cached_byte_size_));
  }
  for (int i = 0, n = this->turn_penalties_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->turn_penalties(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pbebg.TurnPenalties)
}

::google::protobuf::uint8* TurnPenalties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pbebg.TurnPenalties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 turn_penalties = 1;
  if (this->turn_penalties_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _turn_penalties_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->turn_penalties_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbebg.TurnPenalties)
  return target;
}

size_t TurnPenalties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbebg.TurnPenalties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 turn_penalties = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->turn_penalties_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _turn_penalties_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TurnPenalties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbebg.TurnPenalties)
  GOOGLE_DCHECK_NE(&from, this);
  const TurnPenalties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TurnPenalties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbebg.TurnPenalties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbebg.TurnPenalties)
    MergeFrom(*source);
  }
}

void TurnPenalties::MergeFrom(const TurnPenalties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbebg.TurnPenalties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  turn_penalties_.MergeFrom(from.turn_penalties_);
}

void TurnPenalties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbebg.TurnPenalties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TurnPenalties::CopyFrom(const TurnPenalties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbebg.TurnPenalties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TurnPenalties::IsInitialized() const {
  return true;
}

void TurnPenalties::Swap(TurnPenalties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TurnPenalties::InternalSwap(TurnPenalties* other) {
  using std::swap;
  turn_penalties_.InternalSwap(&other->turn_penalties_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TurnPenalties::GetMetadata() const {
  protobuf_edge_2dbased_2dgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_edge_2dbased_2dgraph_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TurnPenalties

// repeated uint32 turn_penalties = 1;
int TurnPenalties::turn_penalties_size() const {
  return turn_penalties_.size();
}
void TurnPenalties::clear_turn_penalties() {
  turn_penalties_.Clear();
}
::google::protobuf::uint32 TurnPenalties::turn_penalties(int index) const {
  // @@protoc_insertion_point(field_get:pbebg.TurnPenalties.turn_penalties)
  return turn_penalties_.Get(index);
}
void TurnPenalties::set_turn_penalties(int index, ::google::protobuf::uint32 value) {
  turn_penalties_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbebg.TurnPenalties.turn_penalties)
}
void TurnPenalties::add_turn_penalties(::google::protobuf::uint32 value) {
  turn_penalties_.Add(value);
  // @@protoc_insertion_point(field_add:pbebg.TurnPenalties.turn_penalties)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TurnPenalties::turn_penalties() const {
  // @@protoc_insertion_point(field_list:pbebg.TurnPenalties.turn_penalties)
  return turn_penalties_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TurnPenalties::mutable_turn_penalties() {
  // @@protoc_insertion_point(field_mutable_list:pbebg.TurnPenalties.turn_penalties)
  return &turn_penalties_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pbebg

// @@protoc_insertion_point(global_scope)
