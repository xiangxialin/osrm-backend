// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scc.proto

#ifndef PROTOBUF_scc_2eproto__INCLUDED
#define PROTOBUF_scc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace pbscc {
class Edges;
class EdgesDefaultTypeInternal;
extern EdgesDefaultTypeInternal _Edges_default_instance_;
class SCCGraph;
class SCCGraphDefaultTypeInternal;
extern SCCGraphDefaultTypeInternal _SCCGraph_default_instance_;
}  // namespace pbscc

namespace pbscc {

namespace protobuf_scc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_scc_2eproto

// ===================================================================

class Edges : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbscc.Edges) */ {
 public:
  Edges();
  virtual ~Edges();

  Edges(const Edges& from);

  inline Edges& operator=(const Edges& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Edges(Edges&& from) noexcept
    : Edges() {
    *this = ::std::move(from);
  }

  inline Edges& operator=(Edges&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Edges& default_instance();

  static inline const Edges* internal_default_instance() {
    return reinterpret_cast<const Edges*>(
               &_Edges_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Edges* other);
  friend void swap(Edges& a, Edges& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Edges* New() const PROTOBUF_FINAL { return New(NULL); }

  Edges* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Edges& from);
  void MergeFrom(const Edges& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Edges* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 targets = 3;
  int targets_size() const;
  void clear_targets();
  static const int kTargetsFieldNumber = 3;
  ::google::protobuf::int32 targets(int index) const;
  void set_targets(int index, ::google::protobuf::int32 value);
  void add_targets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      targets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_targets();

  // @@protoc_insertion_point(class_scope:pbscc.Edges)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > targets_;
  mutable int _targets_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_scc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SCCGraph : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbscc.SCCGraph) */ {
 public:
  SCCGraph();
  virtual ~SCCGraph();

  SCCGraph(const SCCGraph& from);

  inline SCCGraph& operator=(const SCCGraph& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SCCGraph(SCCGraph&& from) noexcept
    : SCCGraph() {
    *this = ::std::move(from);
  }

  inline SCCGraph& operator=(SCCGraph&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SCCGraph& default_instance();

  static inline const SCCGraph* internal_default_instance() {
    return reinterpret_cast<const SCCGraph*>(
               &_SCCGraph_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SCCGraph* other);
  friend void swap(SCCGraph& a, SCCGraph& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SCCGraph* New() const PROTOBUF_FINAL { return New(NULL); }

  SCCGraph* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SCCGraph& from);
  void MergeFrom(const SCCGraph& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SCCGraph* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pbscc.Edges adj = 4;
  int adj_size() const;
  void clear_adj();
  static const int kAdjFieldNumber = 4;
  const ::pbscc::Edges& adj(int index) const;
  ::pbscc::Edges* mutable_adj(int index);
  ::pbscc::Edges* add_adj();
  ::google::protobuf::RepeatedPtrField< ::pbscc::Edges >*
      mutable_adj();
  const ::google::protobuf::RepeatedPtrField< ::pbscc::Edges >&
      adj() const;

  // int32 V = 1;
  void clear_v();
  static const int kVFieldNumber = 1;
  ::google::protobuf::int32 v() const;
  void set_v(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pbscc.SCCGraph)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pbscc::Edges > adj_;
  ::google::protobuf::int32 v_;
  mutable int _cached_size_;
  friend struct protobuf_scc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Edges

// repeated int32 targets = 3;
inline int Edges::targets_size() const {
  return targets_.size();
}
inline void Edges::clear_targets() {
  targets_.Clear();
}
inline ::google::protobuf::int32 Edges::targets(int index) const {
  // @@protoc_insertion_point(field_get:pbscc.Edges.targets)
  return targets_.Get(index);
}
inline void Edges::set_targets(int index, ::google::protobuf::int32 value) {
  targets_.Set(index, value);
  // @@protoc_insertion_point(field_set:pbscc.Edges.targets)
}
inline void Edges::add_targets(::google::protobuf::int32 value) {
  targets_.Add(value);
  // @@protoc_insertion_point(field_add:pbscc.Edges.targets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Edges::targets() const {
  // @@protoc_insertion_point(field_list:pbscc.Edges.targets)
  return targets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Edges::mutable_targets() {
  // @@protoc_insertion_point(field_mutable_list:pbscc.Edges.targets)
  return &targets_;
}

// -------------------------------------------------------------------

// SCCGraph

// int32 V = 1;
inline void SCCGraph::clear_v() {
  v_ = 0;
}
inline ::google::protobuf::int32 SCCGraph::v() const {
  // @@protoc_insertion_point(field_get:pbscc.SCCGraph.V)
  return v_;
}
inline void SCCGraph::set_v(::google::protobuf::int32 value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:pbscc.SCCGraph.V)
}

// repeated .pbscc.Edges adj = 4;
inline int SCCGraph::adj_size() const {
  return adj_.size();
}
inline void SCCGraph::clear_adj() {
  adj_.Clear();
}
inline const ::pbscc::Edges& SCCGraph::adj(int index) const {
  // @@protoc_insertion_point(field_get:pbscc.SCCGraph.adj)
  return adj_.Get(index);
}
inline ::pbscc::Edges* SCCGraph::mutable_adj(int index) {
  // @@protoc_insertion_point(field_mutable:pbscc.SCCGraph.adj)
  return adj_.Mutable(index);
}
inline ::pbscc::Edges* SCCGraph::add_adj() {
  // @@protoc_insertion_point(field_add:pbscc.SCCGraph.adj)
  return adj_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pbscc::Edges >*
SCCGraph::mutable_adj() {
  // @@protoc_insertion_point(field_mutable_list:pbscc.SCCGraph.adj)
  return &adj_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pbscc::Edges >&
SCCGraph::adj() const {
  // @@protoc_insertion_point(field_list:pbscc.SCCGraph.adj)
  return adj_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pbscc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_scc_2eproto__INCLUDED
